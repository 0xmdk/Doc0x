<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell_Publics on</title><link>https://0xmdk.github.io/Doc0x/powershell_public/</link><description>Recent content in PowerShell_Publics on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://0xmdk.github.io/Doc0x/powershell_public/index.xml" rel="self" type="application/rss+xml"/><item><title>Powershell sample</title><link>https://0xmdk.github.io/Doc0x/PowerShell_Public/Creating-Shared-Inbox-via-PowerAutomate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xmdk.github.io/Doc0x/PowerShell_Public/Creating-Shared-Inbox-via-PowerAutomate/</guid><description>Create shared inbox in hybrid env with powershell from powerautomate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 Invoke-Command -ComputerName &amp;#34;your-DC-here&amp;#34; -ScriptBlock {stop-Service -Name ADSync} Import-Module MSOnline Import-Module ActiveDirectory $admin = &amp;#34;globaladmin-here&amp;#34; $password = ConvertTo-SecureString &amp;#34;admpws-here&amp;#34; -AsPlainText -Force $psCred = New-Object System.</description></item><item><title>üê±‚Äçüíª OxMdk</title><link>https://0xmdk.github.io/Doc0x/PowerShell_Public/InTune-Installer-Script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xmdk.github.io/Doc0x/PowerShell_Public/InTune-Installer-Script/</guid><description>PowerShell OpenVPN Example: Step 1: Place body of code on AWS: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 ## Check for Current Installed Client $ovpnapp = Get-Package -Provider Programs -IncludeWindowsInstaller -name &amp;#34;OpenVPN*&amp;#34; -ErrorAction SilentlyContinue ## if installed remove if($ovpnapp.</description></item><item><title>üê±‚Äçüíª OxMdk</title><link>https://0xmdk.github.io/Doc0x/PowerShell_Public/PWS_Detect_installed_app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://0xmdk.github.io/Doc0x/PowerShell_Public/PWS_Detect_installed_app/</guid><description>Mimecast Example: 1 2 3 4 5 6 7 8 9 $MCOUT = Get-WmiObject -Class Win32_product|Where-Object {$_.Name -match &amp;#34;Mimecast for Outlook 64-bit&amp;#34;} $outlook = Get-Process -name OUTLOOK -ErrorAction SilentlyContinue if($MCOUT.</description></item></channel></rss>